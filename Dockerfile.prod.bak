# Fetch official latest base image for python
FROM python:3.10.0-alpine AS builder

WORKDIR /home/app

# Prevent python from writing pyc to docker container
ENV PYTHONDONTWRITEBYTECODE=1
# Flush out python buffer
ENV PYTHONUNBUFFERED=1

# Install build dependencies and create directories
RUN apk update \
    && apk add --no-cache --virtual .build-deps gcc python3-dev musl-dev build-base

# Copy requirements and install dependencies
COPY ./requirements.freeze /home/app/requirements.freeze
RUN pip install --upgrade pip \
    && pip wheel --no-cache-dir --no-deps --wheel-dir /home/app/wheels -r requirements.freeze

# Final image
FROM python:3.10.0-alpine

# Prevent python from writing pyc to docker container
ENV PYTHONDONTWRITEBYTECODE=1
# Flush out python buffer
ENV PYTHONUNBUFFERED=1

RUN mkdir -p /home/app \
    && mkdir /home/static \
    && mkdir /home/media

ENV VIRTUAL_ENV=/venv
ENV PATH=$VIRTUAL_ENV/bin:$PATH
ENV HOME=/home
ENV APP_HOME=/home/app
WORKDIR ${APP_HOME}

# Add app group
RUN addgroup -S app \
    && adduser -S app -G app

RUN apk update && apk add build-base

COPY --from=builder /home/app/wheels /wheels
COPY --from=builder /home/app/requirements.freeze /home/app/requirements.freeze
RUN pip install --no-cache /wheels/*

# Create Python virtual environment, install packages, collect wheels, and add runtime dependencies
RUN python -m venv /venv \
    && /venv/bin/pip install --upgrade pip \
    && /venv/bin/pip install --no-cache-dir --no-deps -r /home/app/requirements.freeze 
    # && /venv/bin/pip wheel --no-cache-dir --no-deps --wheel-dir /home/app/wheels -r /home/app/requirements.freeze

RUN apk del build-base

# Set the virtual environment
ENV VIRTUAL_ENV=/venv
ENV PATH=$VIRTUAL_ENV/bin:$PATH
ENV HOME=/home
ENV APP_HOME=/home/app
WORKDIR ${APP_HOME}

ADD ./nginx /home/app/nginx
# copy entrypoint.sh
COPY ./entrypoint.sh ${APP_HOME}
RUN sed -i 's/\r$//g' ${APP_HOME}/entrypoint.sh
RUN chmod +x ${APP_HOME}/entrypoint.sh

RUN chown -R app:app /home/media
RUN chown -R app:app /home/static

# Copy all the files to your app
COPY simple-crm-app ${APP_HOME}
RUN chown -R app:app ${APP_HOME}

# Change to app user
USER app

# Run entrypoint
ENTRYPOINT [ "/home/app/entrypoint.sh" ]

LABEL maintainer="Okumu Calvin"
LABEL version="0.1"
LABEL description="Multi Organisational CRM software."
